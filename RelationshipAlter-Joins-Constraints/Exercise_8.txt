Task 1 :-

CREATE TABLE authors(
    -> author_id INT PRIMARY KEY AUTO_INCREMENT,
    -> author_name VARCHAR(20) NOT NULL DEFAULT "Author Name"
    -> );

 CREATE TABLE books(
    -> book_id INT PRIMARY KEY AUTO_INCREMENT,
    -> title VARCHAR(20),
    -> ratings INT NOT NULL DEFAULT 5,
    -> author_id INT,
    -> FOREIGN KEY (author_id) REFERENCES authors(author_id) ON DELETE CASCADE
    -> );
Query OK, 0 rows affected (0.18 sec)


INSERT INTO authors(author_name)
   -> VALUES ("Hasan"), ("Umer"), ("Talha"), ("Saad");


 SELECT * FROM authors
    -> INNER JOIN books
    -> ON books.author_id = authors.author_id;
+-----------+-------------+---------+--------------------+---------+-----------+
| author_id | author_name | book_id | title              | ratings | author_id |
+-----------+-------------+---------+--------------------+---------+-----------+
|         1 | Hasan       |       2 | Golang Docs        |       9 |         1 |
|         1 | Hasan       |       4 | Love story         |       8 |         1 |
|         2 | Umer        |       1 | Story of Barbarosa |       5 |         2 |
|         4 | Saad        |       3 | Quaid-e-Azam       |       5 |         4 |
+-----------+-------------+---------+--------------------+---------+-----------+


Task 2 :-

 SELECT author_name, title, ratings FROM authors
 INNER JOIN books
 ON books.author_id = authors.author_id;
+-------------+--------------------+---------+
| author_name | title              | ratings |
+-------------+--------------------+---------+
| Hasan       | Golang Docs        |       9 |
| Hasan       | Love story         |       8 |
| Umer        | Story of Barbarosa |       5 |
| Saad        | Quaid-e-Azam       |       5 |
+-------------+--------------------+---------+


Task 3 :-

 SELECT author_name, title, ratings FROM authors
    -> LEFT JOIN books
    -> ON books.author_id = authors.author_id;
+-------------+--------------------+---------+
| author_name | title              | ratings |
+-------------+--------------------+---------+
| Hasan       | Love story         |       8 |
| Hasan       | Golang Docs        |       9 |
| Umer        | Story of Barbarosa |       5 |
| Talha       | NULL               |    NULL |
| Saad        | Quaid-e-Azam       |       5 |
+-------------+--------------------+---------+
5 rows in set (0.00 sec)


Task 4 :-

 SELECT author_name, IFNULL(title, "NOT FOUND"), IFNULL(ratings, 0) FROM authors
    -> LEFT JOIN books
    -> ON books.author_id = authors.author_id;
+-------------+----------------------------+--------------------+
| author_name | IFNULL(title, "NOT FOUND") | IFNULL(ratings, 0) |
+-------------+----------------------------+--------------------+
| Hasan       | Love story                 |                  8 |
| Hasan       | Golang Docs                |                  9 |
| Umer        | Story of Barbarosa         |                  5 |
| Talha       | NOT FOUND                  |                  0 |
| Saad        | Quaid-e-Azam               |                  5 |
+-------------+----------------------------+--------------------+



Task 5 :-

 SELECT author_name, ratings,
    -> CASE WHEN IFNULL(ratings, 0) >= 6 THEN "Good"
    -> WHEN IFNULL(ratings, 0) >= 4 THEN "Medium"
    -> ELSE "Low"
    -> END
    -> AS Remark
    -> FROM authors
    -> INNER JOIN books
    -> ON books.author_id = authors.author_id;
+-------------+---------+--------+
| author_name | ratings | Remark |
+-------------+---------+--------+
| Umer        |       5 | Medium |
| Hasan       |       9 | Good   |
| Saad        |       5 | Medium |
| Hasan       |       8 | Good   |
+-------------+---------+--------+